{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86186\\\\sit323-HD\\\\client\\\\src\\\\pages\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, ListGroup, Form, Button, Badge, Alert, Spinner } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Messages() {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [messages, setMessages] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (currentUser) {\n      fetchMessages();\n    }\n  }, [currentUser]);\n  const fetchMessages = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      const response = await axios.get(`http://localhost:5000/api/messages/user/${currentUser._id}`);\n      setMessages(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error fetching messages:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch messages. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !selectedConversation) return;\n    try {\n      setError('');\n      const response = await axios.post('http://localhost:5000/api/messages', {\n        itemId: selectedConversation.item._id,\n        senderId: currentUser._id,\n        receiverId: selectedConversation.otherUser._id,\n        content: newMessage.trim()\n      });\n      setMessages(prev => [response.data, ...prev]);\n      setNewMessage('');\n      fetchMessages(); // Refresh messages\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Error sending message:', err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to send message. Please try again.');\n    }\n  };\n  const getConversationPartner = message => {\n    return message.sender._id === currentUser._id ? message.receiver : message.sender;\n  };\n  const getUniqueConversations = () => {\n    const conversations = new Map();\n    messages.forEach(message => {\n      const otherUser = getConversationPartner(message);\n      const key = `${message.item._id}-${otherUser._id}`;\n      if (!conversations.has(key)) {\n        conversations.set(key, {\n          item: message.item,\n          otherUser: otherUser,\n          lastMessage: message,\n          unread: !message.read && message.receiver._id === currentUser._id\n        });\n      }\n    });\n    return Array.from(conversations.values());\n  };\n  const handleSelectConversation = async conversation => {\n    setSelectedConversation(conversation);\n    try {\n      await axios.patch(`http://localhost:5000/api/messages/read/${currentUser._id}`);\n      fetchMessages(); // Refresh messages to update read status\n    } catch (err) {\n      console.error('Failed to mark messages as read:', err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5 text-center\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: fetchMessages,\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n  const conversations = getUniqueConversations();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mb-0\",\n              children: \"Conversations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: conversations.length === 0 ? /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: \"No conversations yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this) : conversations.map((conversation, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              action: true,\n              active: selectedConversation && selectedConversation.item._id === conversation.item._id && selectedConversation.otherUser._id === conversation.otherUser._id,\n              onClick: () => handleSelectConversation(conversation),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"mb-0\",\n                    children: conversation.item.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-muted\",\n                    children: [\"with \", conversation.otherUser.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 45\n                }, this), conversation.unread && /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"primary\",\n                  children: \"New\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 41\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: selectedConversation ? /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-0\",\n                  children: selectedConversation.item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: [\"Conversation with \", selectedConversation.otherUser.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/items/${selectedConversation.item._id}`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-primary\",\n                  size: \"sm\",\n                  children: \"View Item\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messages-container\",\n              style: {\n                height: '400px',\n                overflowY: 'auto'\n              },\n              children: messages.filter(m => m.item._id === selectedConversation.item._id && (m.sender._id === selectedConversation.otherUser._id || m.receiver._id === selectedConversation.otherUser._id)).map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `message ${message.sender._id === currentUser._id ? 'text-end' : 'text-start'} mb-3`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `d-inline-block p-2 rounded ${message.sender._id === currentUser._id ? 'bg-primary text-white' : 'bg-light'}`,\n                  children: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted d-block\",\n                  children: new Date(message.createdAt).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSendMessage,\n              className: \"mt-3\",\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: newMessage,\n                  onChange: e => setNewMessage(e.target.value),\n                  placeholder: \"Type your message...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"primary\",\n                  className: \"ms-2\",\n                  children: \"Send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Select a conversation to start messaging\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n_s(Messages, \"01rNdxAZ2P2LLJuWuk3hYrbN5jc=\", false, function () {\n  return [useAuth];\n});\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","ListGroup","Form","Button","Badge","Alert","Spinner","useAuth","Link","axios","jsxDEV","_jsxDEV","Messages","_s","currentUser","messages","setMessages","selectedConversation","setSelectedConversation","newMessage","setNewMessage","loading","setLoading","error","setError","fetchMessages","response","get","_id","data","err","_err$response","_err$response$data","console","message","handleSendMessage","e","preventDefault","trim","post","itemId","item","senderId","receiverId","otherUser","content","prev","_err$response2","_err$response2$data","getConversationPartner","sender","receiver","getUniqueConversations","conversations","Map","forEach","key","has","set","lastMessage","unread","read","Array","from","values","handleSelectConversation","conversation","patch","className","children","animation","role","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","md","Header","length","Item","map","index","action","active","title","name","bg","to","size","Body","style","height","overflowY","filter","m","Date","createdAt","toLocaleString","onSubmit","Group","Control","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/86186/sit323-HD/client/src/pages/Messages.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Card, ListGroup, Form, Button, Badge, Alert, Spinner } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction Messages() {\r\n    const { currentUser } = useAuth();\r\n    const [messages, setMessages] = useState([]);\r\n    const [selectedConversation, setSelectedConversation] = useState(null);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            fetchMessages();\r\n        }\r\n    }, [currentUser]);\r\n\r\n    const fetchMessages = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError('');\r\n            const response = await axios.get(`http://localhost:5000/api/messages/user/${currentUser._id}`);\r\n            setMessages(response.data);\r\n        } catch (err) {\r\n            console.error('Error fetching messages:', err);\r\n            setError(err.response?.data?.message || 'Failed to fetch messages. Please try again later.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleSendMessage = async (e) => {\r\n        e.preventDefault();\r\n        if (!newMessage.trim() || !selectedConversation) return;\r\n\r\n        try {\r\n            setError('');\r\n            const response = await axios.post('http://localhost:5000/api/messages', {\r\n                itemId: selectedConversation.item._id,\r\n                senderId: currentUser._id,\r\n                receiverId: selectedConversation.otherUser._id,\r\n                content: newMessage.trim()\r\n            });\r\n\r\n            setMessages(prev => [response.data, ...prev]);\r\n            setNewMessage('');\r\n            fetchMessages(); // Refresh messages\r\n        } catch (err) {\r\n            console.error('Error sending message:', err);\r\n            setError(err.response?.data?.message || 'Failed to send message. Please try again.');\r\n        }\r\n    };\r\n\r\n    const getConversationPartner = (message) => {\r\n        return message.sender._id === currentUser._id ? message.receiver : message.sender;\r\n    };\r\n\r\n    const getUniqueConversations = () => {\r\n        const conversations = new Map();\r\n        messages.forEach(message => {\r\n            const otherUser = getConversationPartner(message);\r\n            const key = `${message.item._id}-${otherUser._id}`;\r\n            if (!conversations.has(key)) {\r\n                conversations.set(key, {\r\n                    item: message.item,\r\n                    otherUser: otherUser,\r\n                    lastMessage: message,\r\n                    unread: !message.read && message.receiver._id === currentUser._id\r\n                });\r\n            }\r\n        });\r\n        return Array.from(conversations.values());\r\n    };\r\n\r\n    const handleSelectConversation = async (conversation) => {\r\n        setSelectedConversation(conversation);\r\n        try {\r\n            await axios.patch(`http://localhost:5000/api/messages/read/${currentUser._id}`);\r\n            fetchMessages(); // Refresh messages to update read status\r\n        } catch (err) {\r\n            console.error('Failed to mark messages as read:', err);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <Container className=\"mt-5 text-center\">\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </Spinner>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <Container className=\"mt-5\">\r\n                <Alert variant=\"danger\">{error}</Alert>\r\n                <Button variant=\"primary\" onClick={fetchMessages}>Retry</Button>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    const conversations = getUniqueConversations();\r\n\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <h4 className=\"mb-0\">Conversations</h4>\r\n                        </Card.Header>\r\n                        <ListGroup variant=\"flush\">\r\n                            {conversations.length === 0 ? (\r\n                                <ListGroup.Item>No conversations yet</ListGroup.Item>\r\n                            ) : (\r\n                                conversations.map((conversation, index) => (\r\n                                    <ListGroup.Item\r\n                                        key={index}\r\n                                        action\r\n                                        active={selectedConversation && \r\n                                            selectedConversation.item._id === conversation.item._id &&\r\n                                            selectedConversation.otherUser._id === conversation.otherUser._id}\r\n                                        onClick={() => handleSelectConversation(conversation)}\r\n                                    >\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <div>\r\n                                                <h6 className=\"mb-0\">{conversation.item.title}</h6>\r\n                                                <small className=\"text-muted\">\r\n                                                    with {conversation.otherUser.name}\r\n                                                </small>\r\n                                            </div>\r\n                                            {conversation.unread && (\r\n                                                <Badge bg=\"primary\">New</Badge>\r\n                                            )}\r\n                                        </div>\r\n                                    </ListGroup.Item>\r\n                                ))\r\n                            )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col md={8}>\r\n                    {selectedConversation ? (\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                    <div>\r\n                                        <h5 className=\"mb-0\">{selectedConversation.item.title}</h5>\r\n                                        <small className=\"text-muted\">\r\n                                            Conversation with {selectedConversation.otherUser.name}\r\n                                        </small>\r\n                                    </div>\r\n                                    <Link to={`/items/${selectedConversation.item._id}`}>\r\n                                        <Button variant=\"outline-primary\" size=\"sm\">\r\n                                            View Item\r\n                                        </Button>\r\n                                    </Link>\r\n                                </div>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div className=\"messages-container\" style={{ height: '400px', overflowY: 'auto' }}>\r\n                                    {messages\r\n                                        .filter(m => \r\n                                            m.item._id === selectedConversation.item._id &&\r\n                                            (m.sender._id === selectedConversation.otherUser._id ||\r\n                                             m.receiver._id === selectedConversation.otherUser._id)\r\n                                        )\r\n                                        .map((message, index) => (\r\n                                            <div\r\n                                                key={index}\r\n                                                className={`message ${\r\n                                                    message.sender._id === currentUser._id\r\n                                                        ? 'text-end'\r\n                                                        : 'text-start'\r\n                                                } mb-3`}\r\n                                            >\r\n                                                <div\r\n                                                    className={`d-inline-block p-2 rounded ${\r\n                                                        message.sender._id === currentUser._id\r\n                                                            ? 'bg-primary text-white'\r\n                                                            : 'bg-light'\r\n                                                    }`}\r\n                                                >\r\n                                                    {message.content}\r\n                                                </div>\r\n                                                <small className=\"text-muted d-block\">\r\n                                                    {new Date(message.createdAt).toLocaleString()}\r\n                                                </small>\r\n                                            </div>\r\n                                        ))}\r\n                                </div>\r\n                                <Form onSubmit={handleSendMessage} className=\"mt-3\">\r\n                                    <Form.Group className=\"d-flex\">\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            value={newMessage}\r\n                                            onChange={(e) => setNewMessage(e.target.value)}\r\n                                            placeholder=\"Type your message...\"\r\n                                        />\r\n                                        <Button type=\"submit\" variant=\"primary\" className=\"ms-2\">\r\n                                            Send\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    ) : (\r\n                        <Card>\r\n                            <Card.Body className=\"text-center\">\r\n                                <h5>Select a conversation to start messaging</h5>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Messages; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}