{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Container,Row,Col,Card,ListGroup,Form,Button,Badge,Alert,Spinner}from'react-bootstrap';import{useAuth}from'../contexts/AuthContext';import{Link}from'react-router-dom';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL=process.env.REACT_APP_API_URL;function Messages(){const{currentUser}=useAuth();const[messages,setMessages]=useState([]);const[selectedConversation,setSelectedConversation]=useState(null);const[newMessage,setNewMessage]=useState('');const[loading,setLoading]=useState(true);const[error,setError]=useState('');useEffect(()=>{if(currentUser&&(currentUser.id||currentUser._id)){fetchMessages();}// eslint-disable-next-line\n},[currentUser]);if(!currentUser||!(currentUser.id||currentUser._id)){return/*#__PURE__*/_jsx(Container,{className:\"mt-5 text-center\",children:/*#__PURE__*/_jsx(Alert,{variant:\"warning\",children:\"Please log in to view your messages.\"})});}const fetchMessages=async()=>{try{setLoading(true);setError('');const userId=currentUser.id||currentUser._id;console.log('Fetching messages for user:',userId);const response=await axios.get(\"\".concat(API_BASE_URL,\"/api/messages/user/\").concat(userId),{headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem('token'))}});console.log('Messages response:',response.data);setMessages(response.data);}catch(err){var _err$response,_err$response2,_err$response3,_err$response3$data;console.error('Error fetching messages:',err);console.error('Error details:',{message:err.message,response:(_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.data,status:(_err$response2=err.response)===null||_err$response2===void 0?void 0:_err$response2.status});setError(((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.message)||'Failed to fetch messages. Please try again later.');}finally{setLoading(false);}};const handleSendMessage=async e=>{e.preventDefault();if(!newMessage.trim()||!selectedConversation)return;if(!selectedConversation.item||!selectedConversation.item._id||!selectedConversation.otherUser||!selectedConversation.otherUser._id){alert('Conversation data is invalid, please refresh the page.');return;}try{setError('');const senderId=currentUser.id||currentUser._id;const response=await axios.post(\"\".concat(API_BASE_URL,\"/api/messages\"),{itemId:selectedConversation.item._id,senderId:senderId,receiverId:selectedConversation.otherUser._id,content:newMessage.trim()},{headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem('token'))}});console.log('Message sent successfully:',response.data);setMessages(prev=>[response.data,...prev]);setNewMessage('');fetchMessages();// Refresh messages\n}catch(err){var _err$response4,_err$response5,_err$response6,_err$response6$data;console.error('Error sending message:',err);console.error('Error details:',{message:err.message,response:(_err$response4=err.response)===null||_err$response4===void 0?void 0:_err$response4.data,status:(_err$response5=err.response)===null||_err$response5===void 0?void 0:_err$response5.status});setError(((_err$response6=err.response)===null||_err$response6===void 0?void 0:(_err$response6$data=_err$response6.data)===null||_err$response6$data===void 0?void 0:_err$response6$data.message)||'Failed to send message. Please try again.');}};const getConversationPartner=message=>{return message.sender._id===(currentUser.id||currentUser._id)?message.receiver:message.sender;};const getUniqueConversations=()=>{const conversations=new Map();messages.forEach(message=>{if(!message||!message.item||!message.sender||!message.receiver){console.warn('Invalid message object:',message);return;}const otherUser=getConversationPartner(message);if(!otherUser){console.warn('Could not determine conversation partner for message:',message);return;}const key=\"\".concat(message.item._id,\"-\").concat(otherUser._id);if(!conversations.has(key)){conversations.set(key,{item:message.item,otherUser:otherUser,lastMessage:message,unread:!message.read&&message.receiver._id===(currentUser.id||currentUser._id)});}});return Array.from(conversations.values());};const handleSelectConversation=async conversation=>{setSelectedConversation(conversation);try{const userId=currentUser.id||currentUser._id;await axios.patch(\"\".concat(API_BASE_URL,\"/api/messages/read/\").concat(userId),{},{headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem('token'))}});fetchMessages();// Refresh messages to update read status\n}catch(err){console.error('Failed to mark messages as read:',err);}};if(loading){return/*#__PURE__*/_jsx(Container,{className:\"mt-5 text-center\",children:/*#__PURE__*/_jsx(Spinner,{animation:\"border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})})});}if(error){return/*#__PURE__*/_jsx(Container,{className:\"mt-5\",children:/*#__PURE__*/_jsxs(Alert,{variant:\"danger\",children:[/*#__PURE__*/_jsx(Alert.Heading,{children:\"Error\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-end\",children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:fetchMessages,children:\"Retry\"})})]})});}const conversations=getUniqueConversations();return/*#__PURE__*/_jsx(Container,{className:\"mt-5\",children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h4\",{className:\"mb-0\",children:\"Conversations\"})}),/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:conversations.length===0?/*#__PURE__*/_jsx(ListGroup.Item,{children:\"No conversations yet\"}):conversations.map((conversation,index)=>/*#__PURE__*/_jsx(ListGroup.Item,{action:true,active:selectedConversation&&selectedConversation.item._id===conversation.item._id&&selectedConversation.otherUser._id===conversation.otherUser._id,onClick:()=>handleSelectConversation(conversation),children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h6\",{className:\"mb-0\",children:conversation.item.title}),/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted\",children:[\"with \",conversation.otherUser.name]})]}),conversation.unread&&/*#__PURE__*/_jsx(Badge,{bg:\"primary\",children:\"New\"})]})},index))})]})}),/*#__PURE__*/_jsx(Col,{md:8,children:selectedConversation?/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:selectedConversation.item.title}),/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted\",children:[\"Conversation with \",selectedConversation.otherUser.name]})]}),/*#__PURE__*/_jsx(Link,{to:\"/items/\".concat(selectedConversation.item._id),children:/*#__PURE__*/_jsx(Button,{variant:\"outline-primary\",size:\"sm\",children:\"View Item\"})})]})}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"messages-container\",style:{height:'400px',overflowY:'auto'},children:messages.filter(m=>m&&m.item&&m.item._id&&m.sender&&m.sender._id&&m.receiver&&m.receiver._id&&selectedConversation&&selectedConversation.item&&selectedConversation.item._id&&selectedConversation.otherUser&&selectedConversation.otherUser._id&&m.item._id===selectedConversation.item._id&&(m.sender._id===selectedConversation.otherUser._id||m.receiver._id===selectedConversation.otherUser._id)).map((message,index)=>{const myId=String(currentUser.id||currentUser._id);const isMine=String(message.sender._id)===myId;return/*#__PURE__*/_jsxs(\"div\",{className:\"message \".concat(isMine?'text-end':'text-start',\" mb-3\"),children:[/*#__PURE__*/_jsx(\"div\",{className:\"d-inline-block p-2 rounded \".concat(isMine?'bg-primary text-white':'bg-light'),children:message.content}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted d-block\",children:new Date(message.createdAt).toLocaleString()})]},index);})}),/*#__PURE__*/_jsx(Form,{onSubmit:handleSendMessage,className:\"mt-3\",children:/*#__PURE__*/_jsxs(Form.Group,{className:\"d-flex\",children:[/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:newMessage,onChange:e=>setNewMessage(e.target.value),placeholder:\"Type your message...\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",className:\"ms-2\",children:\"Send\"})]})})]})]}):/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Card.Body,{className:\"text-center\",children:/*#__PURE__*/_jsx(\"h5\",{children:\"Select a conversation to start messaging\"})})})})]})});}export default Messages;","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","ListGroup","Form","Button","Badge","Alert","Spinner","useAuth","Link","axios","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","process","env","REACT_APP_API_URL","Messages","currentUser","messages","setMessages","selectedConversation","setSelectedConversation","newMessage","setNewMessage","loading","setLoading","error","setError","id","_id","fetchMessages","className","children","variant","userId","console","log","response","get","concat","headers","localStorage","getItem","data","err","_err$response","_err$response2","_err$response3","_err$response3$data","message","status","handleSendMessage","e","preventDefault","trim","item","otherUser","alert","senderId","post","itemId","receiverId","content","prev","_err$response4","_err$response5","_err$response6","_err$response6$data","getConversationPartner","sender","receiver","getUniqueConversations","conversations","Map","forEach","warn","key","has","set","lastMessage","unread","read","Array","from","values","handleSelectConversation","conversation","patch","animation","role","Heading","onClick","md","Header","length","Item","map","index","action","active","title","name","bg","to","size","Body","style","height","overflowY","filter","m","myId","String","isMine","Date","createdAt","toLocaleString","onSubmit","Group","Control","type","value","onChange","target","placeholder"],"sources":["/home/s224387468/Deakin-Marketplace/client/src/pages/Messages.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, ListGroup, Form, Button, Badge, Alert, Spinner } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL;\n\nfunction Messages() {\n    const { currentUser } = useAuth();\n    const [messages, setMessages] = useState([]);\n    const [selectedConversation, setSelectedConversation] = useState(null);\n    const [newMessage, setNewMessage] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        if (currentUser && (currentUser.id || currentUser._id)) {\n            fetchMessages();\n        }\n        // eslint-disable-next-line\n    }, [currentUser]);\n\n    if (!currentUser || !(currentUser.id || currentUser._id)) {\n        return (\n            <Container className=\"mt-5 text-center\">\n                <Alert variant=\"warning\">Please log in to view your messages.</Alert>\n            </Container>\n        );\n    }\n\n    const fetchMessages = async () => {\n        try {\n            setLoading(true);\n            setError('');\n            const userId = currentUser.id || currentUser._id;\n            console.log('Fetching messages for user:', userId);\n            const response = await axios.get(`${API_BASE_URL}/api/messages/user/${userId}`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            });\n            console.log('Messages response:', response.data);\n            setMessages(response.data);\n        } catch (err) {\n            console.error('Error fetching messages:', err);\n            console.error('Error details:', {\n                message: err.message,\n                response: err.response?.data,\n                status: err.response?.status\n            });\n            setError(err.response?.data?.message || 'Failed to fetch messages. Please try again later.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleSendMessage = async (e) => {\n        e.preventDefault();\n        if (!newMessage.trim() || !selectedConversation) return;\n\n        if (\n            !selectedConversation.item ||\n            !selectedConversation.item._id ||\n            !selectedConversation.otherUser ||\n            !selectedConversation.otherUser._id\n        ) {\n            alert('Conversation data is invalid, please refresh the page.');\n            return;\n        }\n\n        try {\n            setError('');\n            const senderId = currentUser.id || currentUser._id;\n            const response = await axios.post(`${API_BASE_URL}/api/messages`, {\n                itemId: selectedConversation.item._id,\n                senderId: senderId,\n                receiverId: selectedConversation.otherUser._id,\n                content: newMessage.trim()\n            }, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            });\n            console.log('Message sent successfully:', response.data);\n            setMessages(prev => [response.data, ...prev]);\n            setNewMessage('');\n            fetchMessages(); // Refresh messages\n        } catch (err) {\n            console.error('Error sending message:', err);\n            console.error('Error details:', {\n                message: err.message,\n                response: err.response?.data,\n                status: err.response?.status\n            });\n            setError(err.response?.data?.message || 'Failed to send message. Please try again.');\n        }\n    };\n\n    const getConversationPartner = (message) => {\n        return message.sender._id === (currentUser.id || currentUser._id) ? message.receiver : message.sender;\n    };\n\n    const getUniqueConversations = () => {\n        const conversations = new Map();\n        messages.forEach(message => {\n            if (!message || !message.item || !message.sender || !message.receiver) {\n                console.warn('Invalid message object:', message);\n                return;\n            }\n            const otherUser = getConversationPartner(message);\n            if (!otherUser) {\n                console.warn('Could not determine conversation partner for message:', message);\n                return;\n            }\n            const key = `${message.item._id}-${otherUser._id}`;\n            if (!conversations.has(key)) {\n                conversations.set(key, {\n                    item: message.item,\n                    otherUser: otherUser,\n                    lastMessage: message,\n                    unread: !message.read && message.receiver._id === (currentUser.id || currentUser._id)\n                });\n            }\n        });\n        return Array.from(conversations.values());\n    };\n\n    const handleSelectConversation = async (conversation) => {\n        setSelectedConversation(conversation);\n        try {\n            const userId = currentUser.id || currentUser._id;\n            await axios.patch(`${API_BASE_URL}/api/messages/read/${userId}`, {}, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            });\n            fetchMessages(); // Refresh messages to update read status\n        } catch (err) {\n            console.error('Failed to mark messages as read:', err);\n        }\n    };\n\n    if (loading) {\n        return (\n            <Container className=\"mt-5 text-center\">\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </Spinner>\n            </Container>\n        );\n    }\n\n    if (error) {\n        return (\n            <Container className=\"mt-5\">\n                <Alert variant=\"danger\">\n                    <Alert.Heading>Error</Alert.Heading>\n                    <p>{error}</p>\n                    <hr />\n                    <div className=\"d-flex justify-content-end\">\n                        <Button variant=\"primary\" onClick={fetchMessages}>Retry</Button>\n                    </div>\n                </Alert>\n            </Container>\n        );\n    }\n\n    const conversations = getUniqueConversations();\n\n    return (\n        <Container className=\"mt-5\">\n            <Row>\n                <Col md={4}>\n                    <Card>\n                        <Card.Header>\n                            <h4 className=\"mb-0\">Conversations</h4>\n                        </Card.Header>\n                        <ListGroup variant=\"flush\">\n                            {conversations.length === 0 ? (\n                                <ListGroup.Item>No conversations yet</ListGroup.Item>\n                            ) : (\n                                conversations.map((conversation, index) => (\n                                    <ListGroup.Item\n                                        key={index}\n                                        action\n                                        active={selectedConversation && \n                                            selectedConversation.item._id === conversation.item._id &&\n                                            selectedConversation.otherUser._id === conversation.otherUser._id}\n                                        onClick={() => handleSelectConversation(conversation)}\n                                    >\n                                        <div className=\"d-flex justify-content-between align-items-center\">\n                                            <div>\n                                                <h6 className=\"mb-0\">{conversation.item.title}</h6>\n                                                <small className=\"text-muted\">\n                                                    with {conversation.otherUser.name}\n                                                </small>\n                                            </div>\n                                            {conversation.unread && (\n                                                <Badge bg=\"primary\">New</Badge>\n                                            )}\n                                        </div>\n                                    </ListGroup.Item>\n                                ))\n                            )}\n                        </ListGroup>\n                    </Card>\n                </Col>\n\n                <Col md={8}>\n                    {selectedConversation ? (\n                        <Card>\n                            <Card.Header>\n                                <div className=\"d-flex justify-content-between align-items-center\">\n                                    <div>\n                                        <h5 className=\"mb-0\">{selectedConversation.item.title}</h5>\n                                        <small className=\"text-muted\">\n                                            Conversation with {selectedConversation.otherUser.name}\n                                        </small>\n                                    </div>\n                                    <Link to={`/items/${selectedConversation.item._id}`}>\n                                        <Button variant=\"outline-primary\" size=\"sm\">\n                                            View Item\n                                        </Button>\n                                    </Link>\n                                </div>\n                            </Card.Header>\n                            <Card.Body>\n                                <div className=\"messages-container\" style={{ height: '400px', overflowY: 'auto' }}>\n                                    {messages\n                                        .filter(m =>\n                                            m &&\n                                            m.item && m.item._id &&\n                                            m.sender && m.sender._id &&\n                                            m.receiver && m.receiver._id &&\n                                            selectedConversation &&\n                                            selectedConversation.item && selectedConversation.item._id &&\n                                            selectedConversation.otherUser && selectedConversation.otherUser._id &&\n                                            m.item._id === selectedConversation.item._id &&\n                                            (m.sender._id === selectedConversation.otherUser._id ||\n                                             m.receiver._id === selectedConversation.otherUser._id)\n                                        )\n                                        .map((message, index) => {\n                                            const myId = String(currentUser.id || currentUser._id);\n                                            const isMine = String(message.sender._id) === myId;\n                                            return (\n                                                <div\n                                                    key={index}\n                                                    className={`message ${isMine ? 'text-end' : 'text-start'} mb-3`}\n                                                >\n                                                    <div\n                                                        className={`d-inline-block p-2 rounded ${isMine ? 'bg-primary text-white' : 'bg-light'}`}\n                                                    >\n                                                        {message.content}\n                                                    </div>\n                                                    <small className=\"text-muted d-block\">\n                                                        {new Date(message.createdAt).toLocaleString()}\n                                                    </small>\n                                                </div>\n                                            );\n                                        })}\n                                </div>\n                                <Form onSubmit={handleSendMessage} className=\"mt-3\">\n                                    <Form.Group className=\"d-flex\">\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={newMessage}\n                                            onChange={(e) => setNewMessage(e.target.value)}\n                                            placeholder=\"Type your message...\"\n                                        />\n                                        <Button type=\"submit\" variant=\"primary\" className=\"ms-2\">\n                                            Send\n                                        </Button>\n                                    </Form.Group>\n                                </Form>\n                            </Card.Body>\n                        </Card>\n                    ) : (\n                        <Card>\n                            <Card.Body className=\"text-center\">\n                                <h5>Select a conversation to start messaging</h5>\n                            </Card.Body>\n                        </Card>\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Messages; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}