{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86186\\\\sit323-HD\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    console.log('AuthProvider: Initializing...');\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n      const token = localStorage.getItem('token');\n      console.log('AuthProvider: Checking stored credentials...');\n      if (user && token) {\n        console.log('AuthProvider: Found stored credentials');\n        // Ensure user has id property\n        if (!user.id) {\n          console.log('AuthProvider: No id found in user object');\n          localStorage.removeItem('user');\n          localStorage.removeItem('token');\n          setCurrentUser(null);\n          return;\n        }\n        setCurrentUser(user);\n      } else {\n        console.log('AuthProvider: No stored credentials found');\n        localStorage.removeItem('user');\n        localStorage.removeItem('token');\n        setCurrentUser(null);\n      }\n    } catch (error) {\n      console.error('AuthProvider: Error initializing auth state:', error);\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n      setCurrentUser(null);\n    }\n    setLoading(false);\n  }, []);\n  const login = (token, user) => {\n    console.log('AuthProvider: Login called with user:', user);\n    try {\n      if (!user.id) {\n        console.error('AuthProvider: User object missing id property');\n        throw new Error('Invalid user data');\n      }\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      setCurrentUser(user);\n      console.log('AuthProvider: Login successful');\n    } catch (error) {\n      console.error('AuthProvider: Error during login:', error);\n      throw new Error('Failed to store login information');\n    }\n  };\n  const logout = () => {\n    console.log('AuthProvider: Logout called');\n    try {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setCurrentUser(null);\n      console.log('AuthProvider: Logout successful');\n    } catch (error) {\n      console.error('AuthProvider: Error during logout:', error);\n      throw new Error('Failed to clear login information');\n    }\n  };\n  const value = {\n    currentUser,\n    login,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","console","log","user","JSON","parse","localStorage","getItem","token","id","removeItem","error","login","Error","setItem","stringify","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/86186/sit323-HD/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log('AuthProvider: Initializing...');\r\n    try {\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      const token = localStorage.getItem('token');\r\n      \r\n      console.log('AuthProvider: Checking stored credentials...');\r\n      if (user && token) {\r\n        console.log('AuthProvider: Found stored credentials');\r\n        // Ensure user has id property\r\n        if (!user.id) {\r\n          console.log('AuthProvider: No id found in user object');\r\n          localStorage.removeItem('user');\r\n          localStorage.removeItem('token');\r\n          setCurrentUser(null);\r\n          return;\r\n        }\r\n        setCurrentUser(user);\r\n      } else {\r\n        console.log('AuthProvider: No stored credentials found');\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n        setCurrentUser(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('AuthProvider: Error initializing auth state:', error);\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('token');\r\n      setCurrentUser(null);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = (token, user) => {\r\n    console.log('AuthProvider: Login called with user:', user);\r\n    try {\r\n      if (!user.id) {\r\n        console.error('AuthProvider: User object missing id property');\r\n        throw new Error('Invalid user data');\r\n      }\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      setCurrentUser(user);\r\n      console.log('AuthProvider: Login successful');\r\n    } catch (error) {\r\n      console.error('AuthProvider: Error during login:', error);\r\n      throw new Error('Failed to store login information');\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    console.log('AuthProvider: Logout called');\r\n    try {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      setCurrentUser(null);\r\n      console.log('AuthProvider: Logout successful');\r\n    } catch (error) {\r\n      console.error('AuthProvider: Error during logout:', error);\r\n      throw new Error('Failed to clear login information');\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}