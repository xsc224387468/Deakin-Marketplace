{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86186\\\\sit323-HD\\\\client\\\\src\\\\pages\\\\Messages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, ListGroup, Form, Button, Badge, Alert, Spinner } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Messages() {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [messages, setMessages] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (currentUser) {\n      console.log('Current user:', currentUser);\n      fetchMessages();\n    }\n  }, [currentUser]);\n  const fetchMessages = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      console.log('Fetching messages for user:', currentUser._id);\n      const response = await axios.get(`http://localhost:5000/api/messages/user/${currentUser._id}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      console.log('Messages response:', response.data);\n      setMessages(response.data);\n    } catch (err) {\n      var _err$response, _err$response2, _err$response3, _err$response3$data;\n      console.error('Error fetching messages:', err);\n      console.error('Error details:', {\n        message: err.message,\n        response: (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data,\n        status: (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status\n      });\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Failed to fetch messages. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !selectedConversation) return;\n    try {\n      setError('');\n      console.log('Sending message:', {\n        itemId: selectedConversation.item._id,\n        senderId: currentUser._id,\n        receiverId: selectedConversation.otherUser._id,\n        content: newMessage.trim()\n      });\n      const response = await axios.post('http://localhost:5000/api/messages', {\n        itemId: selectedConversation.item._id,\n        senderId: currentUser._id,\n        receiverId: selectedConversation.otherUser._id,\n        content: newMessage.trim()\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      console.log('Message sent successfully:', response.data);\n      setMessages(prev => [response.data, ...prev]);\n      setNewMessage('');\n      fetchMessages(); // Refresh messages\n    } catch (err) {\n      var _err$response4, _err$response5, _err$response6, _err$response6$data;\n      console.error('Error sending message:', err);\n      console.error('Error details:', {\n        message: err.message,\n        response: (_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data,\n        status: (_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : _err$response5.status\n      });\n      setError(((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || 'Failed to send message. Please try again.');\n    }\n  };\n  const getConversationPartner = message => {\n    return message.sender._id === currentUser._id ? message.receiver : message.sender;\n  };\n  const getUniqueConversations = () => {\n    const conversations = new Map();\n    messages.forEach(message => {\n      const otherUser = getConversationPartner(message);\n      const key = `${message.item._id}-${otherUser._id}`;\n      if (!conversations.has(key)) {\n        conversations.set(key, {\n          item: message.item,\n          otherUser: otherUser,\n          lastMessage: message,\n          unread: !message.read && message.receiver._id === currentUser._id\n        });\n      }\n    });\n    return Array.from(conversations.values());\n  };\n  const handleSelectConversation = async conversation => {\n    setSelectedConversation(conversation);\n    try {\n      await axios.patch(`http://localhost:5000/api/messages/read/${currentUser._id}`, {}, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      fetchMessages(); // Refresh messages to update read status\n    } catch (err) {\n      console.error('Failed to mark messages as read:', err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5 text-center\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: fetchMessages,\n            children: \"Retry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this);\n  }\n  const conversations = getUniqueConversations();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mb-0\",\n              children: \"Conversations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: conversations.length === 0 ? /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: \"No conversations yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this) : conversations.map((conversation, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              action: true,\n              active: selectedConversation && selectedConversation.item._id === conversation.item._id && selectedConversation.otherUser._id === conversation.otherUser._id,\n              onClick: () => handleSelectConversation(conversation),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"mb-0\",\n                    children: conversation.item.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-muted\",\n                    children: [\"with \", conversation.otherUser.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 45\n                }, this), conversation.unread && /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"primary\",\n                  children: \"New\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 41\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: selectedConversation ? /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-0\",\n                  children: selectedConversation.item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: [\"Conversation with \", selectedConversation.otherUser.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/items/${selectedConversation.item._id}`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-primary\",\n                  size: \"sm\",\n                  children: \"View Item\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messages-container\",\n              style: {\n                height: '400px',\n                overflowY: 'auto'\n              },\n              children: messages.filter(m => m.item._id === selectedConversation.item._id && (m.sender._id === selectedConversation.otherUser._id || m.receiver._id === selectedConversation.otherUser._id)).map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `message ${message.sender._id === currentUser._id ? 'text-end' : 'text-start'} mb-3`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `d-inline-block p-2 rounded ${message.sender._id === currentUser._id ? 'bg-primary text-white' : 'bg-light'}`,\n                  children: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted d-block\",\n                  children: new Date(message.createdAt).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSendMessage,\n              className: \"mt-3\",\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: newMessage,\n                  onChange: e => setNewMessage(e.target.value),\n                  placeholder: \"Type your message...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"primary\",\n                  className: \"ms-2\",\n                  children: \"Send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Select a conversation to start messaging\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n}\n_s(Messages, \"01rNdxAZ2P2LLJuWuk3hYrbN5jc=\", false, function () {\n  return [useAuth];\n});\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","ListGroup","Form","Button","Badge","Alert","Spinner","useAuth","Link","axios","jsxDEV","_jsxDEV","Messages","_s","currentUser","messages","setMessages","selectedConversation","setSelectedConversation","newMessage","setNewMessage","loading","setLoading","error","setError","console","log","fetchMessages","_id","response","get","headers","localStorage","getItem","data","err","_err$response","_err$response2","_err$response3","_err$response3$data","message","status","handleSendMessage","e","preventDefault","trim","itemId","item","senderId","receiverId","otherUser","content","post","prev","_err$response4","_err$response5","_err$response6","_err$response6$data","getConversationPartner","sender","receiver","getUniqueConversations","conversations","Map","forEach","key","has","set","lastMessage","unread","read","Array","from","values","handleSelectConversation","conversation","patch","className","children","animation","role","fileName","_jsxFileName","lineNumber","columnNumber","variant","Heading","onClick","md","Header","length","Item","map","index","action","active","title","name","bg","to","size","Body","style","height","overflowY","filter","m","Date","createdAt","toLocaleString","onSubmit","Group","Control","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/86186/sit323-HD/client/src/pages/Messages.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Card, ListGroup, Form, Button, Badge, Alert, Spinner } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction Messages() {\r\n    const { currentUser } = useAuth();\r\n    const [messages, setMessages] = useState([]);\r\n    const [selectedConversation, setSelectedConversation] = useState(null);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            console.log('Current user:', currentUser);\r\n            fetchMessages();\r\n        }\r\n    }, [currentUser]);\r\n\r\n    const fetchMessages = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError('');\r\n            console.log('Fetching messages for user:', currentUser._id);\r\n            \r\n            const response = await axios.get(`http://localhost:5000/api/messages/user/${currentUser._id}`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            \r\n            console.log('Messages response:', response.data);\r\n            setMessages(response.data);\r\n        } catch (err) {\r\n            console.error('Error fetching messages:', err);\r\n            console.error('Error details:', {\r\n                message: err.message,\r\n                response: err.response?.data,\r\n                status: err.response?.status\r\n            });\r\n            setError(err.response?.data?.message || 'Failed to fetch messages. Please try again later.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleSendMessage = async (e) => {\r\n        e.preventDefault();\r\n        if (!newMessage.trim() || !selectedConversation) return;\r\n\r\n        try {\r\n            setError('');\r\n            console.log('Sending message:', {\r\n                itemId: selectedConversation.item._id,\r\n                senderId: currentUser._id,\r\n                receiverId: selectedConversation.otherUser._id,\r\n                content: newMessage.trim()\r\n            });\r\n\r\n            const response = await axios.post('http://localhost:5000/api/messages', {\r\n                itemId: selectedConversation.item._id,\r\n                senderId: currentUser._id,\r\n                receiverId: selectedConversation.otherUser._id,\r\n                content: newMessage.trim()\r\n            }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n\r\n            console.log('Message sent successfully:', response.data);\r\n            setMessages(prev => [response.data, ...prev]);\r\n            setNewMessage('');\r\n            fetchMessages(); // Refresh messages\r\n        } catch (err) {\r\n            console.error('Error sending message:', err);\r\n            console.error('Error details:', {\r\n                message: err.message,\r\n                response: err.response?.data,\r\n                status: err.response?.status\r\n            });\r\n            setError(err.response?.data?.message || 'Failed to send message. Please try again.');\r\n        }\r\n    };\r\n\r\n    const getConversationPartner = (message) => {\r\n        return message.sender._id === currentUser._id ? message.receiver : message.sender;\r\n    };\r\n\r\n    const getUniqueConversations = () => {\r\n        const conversations = new Map();\r\n        messages.forEach(message => {\r\n            const otherUser = getConversationPartner(message);\r\n            const key = `${message.item._id}-${otherUser._id}`;\r\n            if (!conversations.has(key)) {\r\n                conversations.set(key, {\r\n                    item: message.item,\r\n                    otherUser: otherUser,\r\n                    lastMessage: message,\r\n                    unread: !message.read && message.receiver._id === currentUser._id\r\n                });\r\n            }\r\n        });\r\n        return Array.from(conversations.values());\r\n    };\r\n\r\n    const handleSelectConversation = async (conversation) => {\r\n        setSelectedConversation(conversation);\r\n        try {\r\n            await axios.patch(`http://localhost:5000/api/messages/read/${currentUser._id}`, {}, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            fetchMessages(); // Refresh messages to update read status\r\n        } catch (err) {\r\n            console.error('Failed to mark messages as read:', err);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <Container className=\"mt-5 text-center\">\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </Spinner>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <Container className=\"mt-5\">\r\n                <Alert variant=\"danger\">\r\n                    <Alert.Heading>Error</Alert.Heading>\r\n                    <p>{error}</p>\r\n                    <hr />\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <Button variant=\"primary\" onClick={fetchMessages}>Retry</Button>\r\n                    </div>\r\n                </Alert>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    const conversations = getUniqueConversations();\r\n\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            <h4 className=\"mb-0\">Conversations</h4>\r\n                        </Card.Header>\r\n                        <ListGroup variant=\"flush\">\r\n                            {conversations.length === 0 ? (\r\n                                <ListGroup.Item>No conversations yet</ListGroup.Item>\r\n                            ) : (\r\n                                conversations.map((conversation, index) => (\r\n                                    <ListGroup.Item\r\n                                        key={index}\r\n                                        action\r\n                                        active={selectedConversation && \r\n                                            selectedConversation.item._id === conversation.item._id &&\r\n                                            selectedConversation.otherUser._id === conversation.otherUser._id}\r\n                                        onClick={() => handleSelectConversation(conversation)}\r\n                                    >\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                            <div>\r\n                                                <h6 className=\"mb-0\">{conversation.item.title}</h6>\r\n                                                <small className=\"text-muted\">\r\n                                                    with {conversation.otherUser.name}\r\n                                                </small>\r\n                                            </div>\r\n                                            {conversation.unread && (\r\n                                                <Badge bg=\"primary\">New</Badge>\r\n                                            )}\r\n                                        </div>\r\n                                    </ListGroup.Item>\r\n                                ))\r\n                            )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col md={8}>\r\n                    {selectedConversation ? (\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                    <div>\r\n                                        <h5 className=\"mb-0\">{selectedConversation.item.title}</h5>\r\n                                        <small className=\"text-muted\">\r\n                                            Conversation with {selectedConversation.otherUser.name}\r\n                                        </small>\r\n                                    </div>\r\n                                    <Link to={`/items/${selectedConversation.item._id}`}>\r\n                                        <Button variant=\"outline-primary\" size=\"sm\">\r\n                                            View Item\r\n                                        </Button>\r\n                                    </Link>\r\n                                </div>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div className=\"messages-container\" style={{ height: '400px', overflowY: 'auto' }}>\r\n                                    {messages\r\n                                        .filter(m => \r\n                                            m.item._id === selectedConversation.item._id &&\r\n                                            (m.sender._id === selectedConversation.otherUser._id ||\r\n                                             m.receiver._id === selectedConversation.otherUser._id)\r\n                                        )\r\n                                        .map((message, index) => (\r\n                                            <div\r\n                                                key={index}\r\n                                                className={`message ${\r\n                                                    message.sender._id === currentUser._id\r\n                                                        ? 'text-end'\r\n                                                        : 'text-start'\r\n                                                } mb-3`}\r\n                                            >\r\n                                                <div\r\n                                                    className={`d-inline-block p-2 rounded ${\r\n                                                        message.sender._id === currentUser._id\r\n                                                            ? 'bg-primary text-white'\r\n                                                            : 'bg-light'\r\n                                                    }`}\r\n                                                >\r\n                                                    {message.content}\r\n                                                </div>\r\n                                                <small className=\"text-muted d-block\">\r\n                                                    {new Date(message.createdAt).toLocaleString()}\r\n                                                </small>\r\n                                            </div>\r\n                                        ))}\r\n                                </div>\r\n                                <Form onSubmit={handleSendMessage} className=\"mt-3\">\r\n                                    <Form.Group className=\"d-flex\">\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            value={newMessage}\r\n                                            onChange={(e) => setNewMessage(e.target.value)}\r\n                                            placeholder=\"Type your message...\"\r\n                                        />\r\n                                        <Button type=\"submit\" variant=\"primary\" className=\"ms-2\">\r\n                                            Send\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    ) : (\r\n                        <Card>\r\n                            <Card.Body className=\"text-center\">\r\n                                <h5>Select a conversation to start messaging</h5>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Messages; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}