{"ast":null,"code":"import _objectSpread from \"/home/s224387468/Deakin-Marketplace/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/home/s224387468/Deakin-Marketplace/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"children\", \"type\", \"name\", \"value\", \"onChange\", \"vertical\"];\nimport * as React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const _useUncontrolled = useUncontrolled(props, {\n      value: 'onChange'\n    }),\n    {\n      children,\n      type = 'radio',\n      name,\n      value,\n      onChange,\n      vertical = false\n    } = _useUncontrolled,\n    controlledProps = _objectWithoutProperties(_useUncontrolled, _excluded);\n  const getValues = () => value == null ? [] : [].concat(value);\n  const handleToggle = (inputVal, event) => {\n    if (!onChange) {\n      return;\n    }\n    const values = getValues();\n    const isActive = values.indexOf(inputVal) !== -1;\n    if (type === 'radio') {\n      if (!isActive) onChange(inputVal, event);\n      return;\n    }\n    if (isActive) {\n      onChange(values.filter(n => n !== inputVal), event);\n    } else {\n      onChange([...values, inputVal], event);\n    }\n  };\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/_jsx(ButtonGroup, _objectSpread(_objectSpread({}, controlledProps), {}, {\n    ref: ref,\n    vertical: vertical,\n    children: map(children, child => {\n      const values = getValues();\n      const {\n        value: childVal,\n        onChange: childOnChange\n      } = child.props;\n      const handler = e => handleToggle(childVal, e);\n      return /*#__PURE__*/React.cloneElement(child, {\n        type,\n        name: child.name || name,\n        checked: values.indexOf(childVal) !== -1,\n        onChange: chainFunction(childOnChange, handler)\n      });\n    })\n  }));\n});\nToggleButtonGroup.displayName = 'ToggleButtonGroup';\nexport default Object.assign(ToggleButtonGroup, {\n  Button: ToggleButton\n});","map":{"version":3,"names":["React","invariant","useUncontrolled","chainFunction","map","ButtonGroup","ToggleButton","jsx","_jsx","ToggleButtonGroup","forwardRef","props","ref","_useUncontrolled","value","children","type","name","onChange","vertical","controlledProps","_objectWithoutProperties","_excluded","getValues","concat","handleToggle","inputVal","event","values","isActive","indexOf","filter","n","process","env","NODE_ENV","_objectSpread","child","childVal","childOnChange","handler","e","cloneElement","checked","displayName","Object","assign","Button"],"sources":["/home/s224387468/Deakin-Marketplace/client/node_modules/react-bootstrap/esm/ToggleButtonGroup.js"],"sourcesContent":["import * as React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    children,\n    type = 'radio',\n    name,\n    value,\n    onChange,\n    vertical = false,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    value: 'onChange'\n  });\n  const getValues = () => value == null ? [] : [].concat(value);\n  const handleToggle = (inputVal, event) => {\n    if (!onChange) {\n      return;\n    }\n    const values = getValues();\n    const isActive = values.indexOf(inputVal) !== -1;\n    if (type === 'radio') {\n      if (!isActive) onChange(inputVal, event);\n      return;\n    }\n    if (isActive) {\n      onChange(values.filter(n => n !== inputVal), event);\n    } else {\n      onChange([...values, inputVal], event);\n    }\n  };\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/_jsx(ButtonGroup, {\n    ...controlledProps,\n    ref: ref,\n    vertical: vertical,\n    children: map(children, child => {\n      const values = getValues();\n      const {\n        value: childVal,\n        onChange: childOnChange\n      } = child.props;\n      const handler = e => handleToggle(childVal, e);\n      return /*#__PURE__*/React.cloneElement(child, {\n        type,\n        name: child.name || name,\n        checked: values.indexOf(childVal) !== -1,\n        onChange: chainFunction(childOnChange, handler)\n      });\n    })\n  });\n});\nToggleButtonGroup.displayName = 'ToggleButtonGroup';\nexport default Object.assign(ToggleButtonGroup, {\n  Button: ToggleButton\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}