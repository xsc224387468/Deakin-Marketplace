{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export function useAuth(){return useContext(AuthContext);}export function AuthProvider(_ref){let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{console.log('AuthProvider: Initializing...');try{const user=JSON.parse(localStorage.getItem('user'));const token=localStorage.getItem('token');console.log('AuthProvider: Checking stored credentials...');if(user&&token){console.log('AuthProvider: Found stored credentials');if(!user.id&&user._id)user.id=user._id;setCurrentUser(user);}else{console.log('AuthProvider: No stored credentials found');localStorage.removeItem('user');localStorage.removeItem('token');setCurrentUser(null);}}catch(error){console.error('AuthProvider: Error initializing auth state:',error);localStorage.removeItem('user');localStorage.removeItem('token');setCurrentUser(null);}setLoading(false);},[]);const login=(token,user)=>{console.log('AuthProvider: Login called with user:',user);try{if(!user.id&&user._id)user.id=user._id;localStorage.setItem('token',token);localStorage.setItem('user',JSON.stringify(user));setCurrentUser(user);console.log('AuthProvider: Login successful');}catch(error){console.error('AuthProvider: Error during login:',error);throw new Error('Failed to store login information');}};const logout=()=>{console.log('AuthProvider: Logout called');try{localStorage.removeItem('token');localStorage.removeItem('user');setCurrentUser(null);console.log('AuthProvider: Logout successful');}catch(error){console.error('AuthProvider: Error during logout:',error);throw new Error('Failed to clear login information');}};const value={currentUser,login,logout,loading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:!loading&&children});}","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","currentUser","setCurrentUser","loading","setLoading","console","log","user","JSON","parse","localStorage","getItem","token","id","_id","removeItem","error","login","setItem","stringify","Error","logout","value","Provider"],"sources":["/home/s224387468/Deakin-Marketplace/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    console.log('AuthProvider: Initializing...');\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n      const token = localStorage.getItem('token');\n      \n      console.log('AuthProvider: Checking stored credentials...');\n      if (user && token) {\n        console.log('AuthProvider: Found stored credentials');\n        if (!user.id && user._id) user.id = user._id;\n        setCurrentUser(user);\n      } else {\n        console.log('AuthProvider: No stored credentials found');\n        localStorage.removeItem('user');\n        localStorage.removeItem('token');\n        setCurrentUser(null);\n      }\n    } catch (error) {\n      console.error('AuthProvider: Error initializing auth state:', error);\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n      setCurrentUser(null);\n    }\n    setLoading(false);\n  }, []);\n\n  const login = (token, user) => {\n    console.log('AuthProvider: Login called with user:', user);\n    try {\n      if (!user.id && user._id) user.id = user._id;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      setCurrentUser(user);\n      console.log('AuthProvider: Login successful');\n    } catch (error) {\n      console.error('AuthProvider: Error during login:', error);\n      throw new Error('Failed to store login information');\n    }\n  };\n\n  const logout = () => {\n    console.log('AuthProvider: Logout called');\n    try {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setCurrentUser(null);\n      console.log('AuthProvider: Logout successful');\n    } catch (error) {\n      console.error('AuthProvider: Error during logout:', error);\n      throw new Error('Failed to clear login information');\n    }\n  };\n\n  const value = {\n    currentUser,\n    login,\n    logout,\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}