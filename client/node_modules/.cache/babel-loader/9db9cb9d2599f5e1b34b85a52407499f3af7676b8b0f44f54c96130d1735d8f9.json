{"ast":null,"code":"import _objectWithoutProperties from\"/home/s224387468/Deakin-Marketplace/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _objectSpread from\"/home/s224387468/Deakin-Marketplace/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";const _excluded=[\"confirmPassword\"];import React,{useState}from'react';import{Link,useNavigate}from'react-router-dom';import{Container,Card,Form,Button,Alert,Row,Col}from'react-bootstrap';import axios from'axios';import{useAuth}from'../contexts/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL=process.env.REACT_APP_API_URL;function Register(){const[formData,setFormData]=useState({email:'',password:'',confirmPassword:'',name:'',phone:''});const[error,setError]=useState('');const[loading,setLoading]=useState(false);const navigate=useNavigate();const{login}=useAuth();const isValidDeakinEmail=email=>{const deakinEmailRegex=/^[a-zA-Z0-9._%+-]+@deakin\\.edu\\.au$/;return deakinEmailRegex.test(email);};const handleChange=e=>{const{name,value}=e.target;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));// Clear email-specific error when user starts typing\nif(name==='email'&&error==='Please use a valid Deakin email address (@deakin.edu.au)'){setError('');}};const handleSubmit=async e=>{e.preventDefault();setError('');setLoading(true);// Validate Deakin email\nif(!isValidDeakinEmail(formData.email)){setError('Please use a valid Deakin email address (@deakin.edu.au)');setLoading(false);return;}if(formData.password!==formData.confirmPassword){setError('Passwords do not match');setLoading(false);return;}try{const{confirmPassword}=formData,registerData=_objectWithoutProperties(formData,_excluded);const response=await axios.post('${API_BASE_URL}/api/users/register',registerData);login(response.data.token,response.data.user);navigate('/');}catch(err){var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'Registration failed');}finally{setLoading(false);}};return/*#__PURE__*/_jsx(Container,{className:\"mt-5\",children:/*#__PURE__*/_jsx(Row,{className:\"justify-content-center\",children:/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center mb-4\",children:\"Register\"}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Deakin Email\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange,placeholder:\"your.name@deakin.edu.au\",required:true}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-muted\",children:\"Please use your Deakin email address\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",name:\"password\",value:formData.password,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",name:\"confirmPassword\",value:formData.confirmPassword,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Full Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",name:\"name\",value:formData.name,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Phone Number\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",name:\"phone\",value:formData.phone,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",className:\"w-100\",disabled:loading,children:loading?'Registering...':'Register'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-3\",children:/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Already have an account? Login\"})})]})})})})});}export default Register;","map":{"version":3,"names":["React","useState","Link","useNavigate","Container","Card","Form","Button","Alert","Row","Col","axios","useAuth","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","process","env","REACT_APP_API_URL","Register","formData","setFormData","email","password","confirmPassword","name","phone","error","setError","loading","setLoading","navigate","login","isValidDeakinEmail","deakinEmailRegex","test","handleChange","e","value","target","prev","_objectSpread","handleSubmit","preventDefault","registerData","_objectWithoutProperties","_excluded","response","post","data","token","user","err","_err$response","_err$response$data","message","className","children","md","Body","variant","onSubmit","Group","Label","Control","type","onChange","placeholder","required","Text","disabled","to"],"sources":["/home/s224387468/Deakin-Marketplace/client/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Container, Card, Form, Button, Alert, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useAuth } from '../contexts/AuthContext';\nconst API_BASE_URL = process.env.REACT_APP_API_URL;\n\nfunction Register() {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '',\n        confirmPassword: '',\n        name: '',\n        phone: ''\n    });\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n    const { login } = useAuth();\n\n    const isValidDeakinEmail = (email) => {\n        const deakinEmailRegex = /^[a-zA-Z0-9._%+-]+@deakin\\.edu\\.au$/;\n        return deakinEmailRegex.test(email);\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({\n            ...prev,\n            [name]: value\n        }));\n\n        // Clear email-specific error when user starts typing\n        if (name === 'email' && error === 'Please use a valid Deakin email address (@deakin.edu.au)') {\n            setError('');\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError('');\n        setLoading(true);\n\n        // Validate Deakin email\n        if (!isValidDeakinEmail(formData.email)) {\n            setError('Please use a valid Deakin email address (@deakin.edu.au)');\n            setLoading(false);\n            return;\n        }\n\n        if (formData.password !== formData.confirmPassword) {\n            setError('Passwords do not match');\n            setLoading(false);\n            return;\n        }\n\n        try {\n            const { confirmPassword, ...registerData } = formData;\n            const response = await axios.post('${API_BASE_URL}/api/users/register', registerData);\n            login(response.data.token, response.data.user);\n            navigate('/');\n        } catch (err) {\n            setError(err.response?.data?.message || 'Registration failed');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <Container className=\"mt-5\">\n            <Row className=\"justify-content-center\">\n                <Col md={6}>\n                    <Card>\n                        <Card.Body>\n                            <h2 className=\"text-center mb-4\">Register</h2>\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\n                            <Form onSubmit={handleSubmit}>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Deakin Email</Form.Label>\n                                    <Form.Control\n                                        type=\"email\"\n                                        name=\"email\"\n                                        value={formData.email}\n                                        onChange={handleChange}\n                                        placeholder=\"your.name@deakin.edu.au\"\n                                        required\n                                    />\n                                    <Form.Text className=\"text-muted\">\n                                        Please use your Deakin email address\n                                    </Form.Text>\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control\n                                        type=\"password\"\n                                        name=\"password\"\n                                        value={formData.password}\n                                        onChange={handleChange}\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Confirm Password</Form.Label>\n                                    <Form.Control\n                                        type=\"password\"\n                                        name=\"confirmPassword\"\n                                        value={formData.confirmPassword}\n                                        onChange={handleChange}\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Full Name</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"name\"\n                                        value={formData.name}\n                                        onChange={handleChange}\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Phone Number</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"phone\"\n                                        value={formData.phone}\n                                        onChange={handleChange}\n                                        required\n                                    />\n                                </Form.Group>\n                                <Button\n                                    variant=\"primary\"\n                                    type=\"submit\"\n                                    className=\"w-100\"\n                                    disabled={loading}\n                                >\n                                    {loading ? 'Registering...' : 'Register'}\n                                </Button>\n                            </Form>\n                            <div className=\"text-center mt-3\">\n                                <Link to=\"/login\">Already have an account? Login</Link>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Register; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}